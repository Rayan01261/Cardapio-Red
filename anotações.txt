*** Principais comandos do Django***

python manage.py runserver                  → Inicia o servidor de desenvolvimento local do Django.
python manage.py migrate                    → Aplica as migrações pendentes ao banco de dados (cria/atualiza tabelas).
python manage.py makemigrations             → Cria novas migrações para alterações nos modelos (modelos para o banco de dados).
python manage.py createsuperuser            → Cria um usuário administrador para o painel de administração do Django.
python manage.py shell                      → Abre um shell interativo do Python configurado com o Django (útil para testar comandos).
python manage.py startapp nome\_da\_app     → Cria uma nova aplicação Django com a estrutura básica.
python manage.py startproject nome\_proj    → Cria um novo projeto Django com a estrutura básica.
python manage.py collectstatic              → Reúne todos os arquivos estáticos em uma única pasta (para produção).
python manage.py test                       → Executa os testes automatizados do Django.
python manage.py check                      → Verifica o projeto em busca de problemas (sem aplicar mudanças).
python manage.py showmigrations             → Lista todas as migrações existentes e o status de cada uma.
python manage.py flush                      → Limpa todos os dados do banco de dados (sem excluir as tabelas).
python manage.py dbshell                    → Abre o shell do banco de dados configurado (MySQL, PostgreSQL, SQLite, etc.).
python manage.py dumpdata                   → Exporta dados do banco de dados em formato JSON, XML ou YAML.
python manage.py loaddata                   → Carrega dados em formato JSON, XML ou YAML no banco de dados.
python manage.py diffsettings               → Mostra as diferenças entre as configurações padrão e as personalizadas do projeto.
python manage.py changepassword usuario     → Permite alterar a senha de um usuário diretamente pelo terminal.
python manage.py sqlmigrate app migração    → Mostra o SQL gerado por uma migração específica.
python manage.py clear\_cache               → Limpa o cache do Django.
python manage.py inspectdb                  → Gera modelos automaticamente a partir de um banco de dados existente.
python manage.py show\_urls                 → (Dependendo da versão) Mostra todas as URLs configuradas no projeto.
python manage.py graph\_models              → Gera um diagrama dos modelos do projeto (se tiver a lib django-extensions).



EXEMPLOS ENDPOINTs:


INSTALAÇÕES:

pip install python-decouple
pip install psycopg2-binary
pip install djangorestframework-simplejwt
python.exe -m pip install --upgrade pip
